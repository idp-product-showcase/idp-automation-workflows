name: create-self-service-aks-application

on:
  workflow_dispatch:
    inputs:
      application_properties:
        description: 'Application properties as JSON string'
        required: true
        type: string
      repository_properties:
        description: 'Application properties as JSON string'
        required: true
        type: string
      aks_namespace_properties:
        description: 'Application properties as JSON string'
        required: true
        type: string
      port_context:
        description: 'Port context as JSON string'
        required: true
        type: string
env:
    iconlist: '{"python" : "Python", "java": "Java", "javascript": "JavaScript"}'

jobs:
  create-scaffold-project:
    uses: ./.github/workflows/create-scaffold-project.yml # Path to your reusable workflow
    with:
      repository_name: ${{ fromJSON(inputs.repository_properties).repository_name }} 
      language: ${{ fromJSON(inputs.application_properties).language }}
      scaffold_required: ${{ fromJSON(inputs.repository_properties).scaffold_required }}
    secrets: inherit

  report-port-services:
    runs-on: ubuntu-latest
    needs: create-scaffold-project
    steps:
      - name: Report to Port AKS Namespace
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.port.io
          operation: UPSERT
          icon: "Cluster"
          identifier: ${{ fromJSON(inputs.aks_namespace_properties).namespace_name }}
          blueprint: aks_namespace
          title: ${{ fromJSON(inputs.aks_namespace_properties).namespace_name }}
          properties: |
            {
              "cpu_quota": "${{ fromJSON(inputs.aks_namespace_properties).cpu_quota }}",
              "memory_quota": "${{ fromJSON(inputs.aks_namespace_properties).memory_quota }}",
              "name": "${{ fromJSON(inputs.aks_namespace_properties).namespace_name }}"
            }
          relations: | 
            {
              "environment":  "${{ fromJSON(inputs.application_properties).env }}"
            }

      - name: Report to Port Application project
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.port.io
          operation: UPSERT
          icon: ${{ fromJSON(env.iconlist)[${{ fromJSON(inputs.application_properties).language }}] }} 
          blueprint: ${{ fromJSON(inputs.port_context).action_identifier }}
          title: ${{ fromJSON(inputs.application_properties).application_name }}
          identifier: ${{ fromJSON(inputs.application_properties).application_name }}
          properties: |
            {

              "URL": "${{ needs.create-scaffold-project.outputs.repo_url }}",
              "lifecycle": "${{ fromJSON(inputs.application_properties).lifecycle }}",
              "language": "${{ fromJSON(inputs.application_properties).language }}"
            }
          relations: | 
            {
              "environment": "${{ fromJSON(inputs.application_properties).env }}",
              "repository": "${{ fromJSON(inputs.repository_properties).repository_name }}",
              "domain": "${{ fromJSON(inputs.port_context).domain_identifier }}",
              "aks_namespace": "${{ fromJSON(inputs.aks_namespace_properties).namespace_name }}",
              "application_tier": "${{ fromJSON(inputs.application_properties).application_tier }}"
            }